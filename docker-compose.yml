version: '3.8'

services:
  # Gunicorn Application Server
  saudi-cyber-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: saudi-cyber-tool
    restart: unless-stopped
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
    volumes:
      - ./logs:/app/logs
      - ./exports:/app/exports
      - ./reports:/app/reports
    networks:
      - cyber-network
    depends_on:
      - nginx
    expose:
      - "8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: saudi-cyber-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/ssl/certs
      - ./static:/var/www/static
      - ./logs/nginx:/var/log/nginx
    networks:
      - cyber-network
    depends_on:
      - saudi-cyber-app

  # Optional: Apache as alternative
  apache:
    image: httpd:alpine
    container_name: saudi-cyber-apache
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./apache.conf:/usr/local/apache2/conf/extra/saudi-cyber.conf
      - ./ssl:/etc/ssl/certs
      - ./static:/var/www/static
      - ./logs/apache:/var/log/apache2
    networks:
      - cyber-network
    profiles:
      - apache

  # Optional: Redis for caching
  redis:
    image: redis:alpine
    container_name: saudi-cyber-redis
    restart: unless-stopped
    networks:
      - cyber-network
    volumes:
      - redis_data:/data
    profiles:
      - cache

networks:
  cyber-network:
    driver: bridge

volumes:
  redis_data: